unixLogSocket: /tmp/grease.socket
sysLogSocket: /dev/log
httpUnixSocket: /tmp/maestroapi.sock
scratchPath: /tmp/maestro   # where we temporarily store images
imagePath: /var/maestro     # where we place App images permanently
clientId: WWSR00001C  # ðŸ˜Ž
platform_readers:
  - platform: "wwrelayA10-BOGUS"
relaymq:
    host: devcloud-relaymq.wigwag.io
    logging: true
    queue_name: "upgrades"
    port: 443
    client_cert: "{{CLIENT_CERT_PEM}}"
    client_key: "{{CLIENT_KEY_PEM}}"
var_defs:
   - key: "TMP_DIR"
     value: "/tmp"
   - key: "WIGWAG_DIR"
     value: "/wigwag"
   - key: "NODE_EXEC"
     value: "/home/ed/work/devicejs-ng/.local/bin/node"
   - key: "DEVICEJS_ROOT"
     value: "/home/ed/work/devicejs-ng"
   - key: "DEVJS_CORE_MODULES"
     value: "/home/ed/work/devicejs-core-modules"
   - key: "MAESTRO_RUNNER_DIR"
     value: "/home/ed/work/devicejs-core-modules/maestroRunner"
   - key: "WIGWAG_SYSTEM"
     value: "/home/ed/work/devicedb"
   # - key: "CA_PEM"vvvss
   #   value: > 
   #         -----BEGIN CERTIFICATE-----
   #    MIIFnjCCA4agAwIBAgIJALK9uBsr+g83MA0GCSqGSIb3DQEBCwUAMFwxCzAJBgNV
   #    BAYTAlVTMQ4wDAYDVQQIDAVUZXhhczEPMA0GA1UEBwwGQXVzdGluMRMwEQYDVQQK
   #    DApXaWdXYWcgSW5jMRcwFQYDVQQDDA5XaWdXYWcgUm9vdCBDQTAeFw0xNjA2MDEy
   #    MDM5MjFaFw0zNjA1MjcyMDM5MjFaMFwxCzAJBgNVBAYTAlVTMQ4wDAYDVQQIDAVU
   #    ZXhhczEPMA0GA1UEBwwGQXVzdGluMRMwEQYDVQQKDApXaWdXYWcgSW5jMRcwFQYD
   #    VQQDDA5XaWdXYWcgUm9vdCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
   #    ggIBALc+N4Mh1t8bDezX27BMAttTI/jfUiDfjeNb5w9F1T3bVg8rp1Ov8BIltAVU
   #    yqJnM+fvI/rwYwFRPMZY7zW8X1oSvgtKarsPqCZR2QJiv0cTSi/3gPOSunwIT4W7
   #    BnLAJhy3RoYhhxApmGyiUOcOMzgB3rlEQLk7DbaBf6SN99ONuarRjuzVOvyaFOtN
   #    549DM7HoS0EM7H6iXbJ5O6jHKi62ikW8KmUQhwjn165A0GPM1L90xmdGYSvsb4z3
   #    j/A0eewaEFlwBqpbgqd+JFqRiSTekh7a99/V8CJN8LM8wUZRbUZeMxaoTikBHSS2
   #    XpzBE7IeOU+nuGzPaqEt/7FyuVTRqcIljCLg2JwWDunXSMQS9BjnrCeyXfXYjHzq
   #    +A56Zbxh02dv6af+sPOQU+MqInTzigdVAo48tUmMWEIRjy40LDUPpzCTY9u/OGKM
   #    wDwCi41EaVMzxt4O2jkMRdZtimxrGzSHhJ8lLYvjNL5VN5IkLMSqxP8nZQhempfC
   #    W6DIaXLpp47WrrM7yYy4xQKRvcOQgjYjyoHKsZhvAVMHQlgJbmFy5pkQ5fFMeF69
   #    8IY+fO1L+4NKyXjxwrx4qsYVlpdsdq1Gq3GZLFRZK5+eWz1B+jfvByd7rJgPquln
   #    s0i0dQTmdArgM7pfbY0q5XQQ9FZQKXXeFT87RmIrQYJVS95DAgMBAAGjYzBhMB0G
   #    A1UdDgQWBBT7LAJkl2A4kJDKW0cHcaOJGs1g4jAfBgNVHSMEGDAWgBT7LAJkl2A4
   #    kJDKW0cHcaOJGs1g4jAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAN
   #    BgkqhkiG9w0BAQsFAAOCAgEAKEkegYys0knM0hSM6FnqJ+VYSb6cZL22j8r+V7al
   #    Dd+OxNHrWPFw8AShDvbHKCi9icG0oe6vMvKgVb8/4y2Gcl5pPsk7zUdYZAkYEEN9
   #    cHIYvi49U1An77gA0OH3CUjyrjnMUuvozrTstQYHZfcl6to3ZfZerkwXYXm6xpgJ
   #    mOqEhJ5v0DgcFjCoYMGbr5/G2Kw3t69jYRxK3BfV5ZNqU2ct2ZJeDhD1c6mGPncu
   #    tKZp222XZZ3UIOVGodc3o8Zo6DJTMgh6A2CKSh3bfD8VIS+IzAJG4XmW+Vw7ffRm
   #    smRdRd9TFhBMerGN08TJw7QOO7j5aeT+eeTPExQTnJg5I3vosejxP/kx54CHDvmU
   #    78N3R8jV6FTf0q+C2/rjsWY4uPvs4HiI/KIQmaNUubrgZmyRubr5Zl2WLbzkUoui
   #    ytL1xdkSCQg8+UW0uD+oKuZ/QJwWmrL+9McwZnWI2DpysHeQa2Uswo9nomtF4gfS
   #    nE/sZOvLdgJyzCYxvegsrzsenr3KjrA+lhrmiB/A1HlfBlYpWbJDkE+7Atcx62Xx
   #    z03bTpWcz6Geq4mmYK/JXMGPr39gkVi/Tp14uVcS9fRn30+zWO5y6xW09fHDsNCT
   #    4lO7Pxfh/qY/lMcb8aQaVbbwqfD+VpC/8UDrbo0niBatG33uIxEiSabpJe8elgGJ
   #    ciE=
   #    -----END CERTIFICATE-----
   #    -----BEGIN CERTIFICATE-----
   #    MIIFkTCCA3mgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwXDELMAkGA1UEBhMCVVMx
   #    DjAMBgNVBAgMBVRleGFzMQ8wDQYDVQQHDAZBdXN0aW4xEzARBgNVBAoMCldpZ1dh
   #    ZyBJbmMxFzAVBgNVBAMMDldpZ1dhZyBSb290IENBMB4XDTE2MDYwMTIwNDUyMVoX
   #    DTI2MDUzMDIwNDUyMVowUzELMAkGA1UEBhMCVVMxDjAMBgNVBAgMBVRleGFzMRMw
   #    EQYDVQQKDApXaWdXYWcgSW5jMR8wHQYDVQQDDBZXaWdXYWcgSW50ZXJtZWRpYXRl
   #    IENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArY6aTP1Pv2+KcXOj
   #    nb1Sln6ty+MJH/JKfzsh8UMQ0CXX9pEvVKdDBkA8zAHULxPvmwpNZI1VIZTH6ELK
   #    /C5EBFWQiiX37KvQ/C+hAZdOau/aLSVD4f9sdGKVUcFigNmLIyff4ltJ60qp6Zzi
   #    dG2aWGcNncmp8J8mryscZyAOAWtVm/niWoU5Q1siJYMDEnYaO/y3ypPlOxpzX15k
   #    lFnkwkTQAc97eKqF1xBFa7NEZQm7okO+RR9eFfT2ibb/kQHmI56cD74XDN/knkmk
   #    FS6F6m0jZ9CmrJw/K0nE2a4rAKhKY44Brnm+k57iD+6EMIL7i42n28z0R5lueDhu
   #    uAHdngNTreSePl+gX+CCX0IxgCnG0xj0FwDxZdpcSuqHDY/qFocsFDeuxUbYOtB1
   #    1n2HxJ4E7uFvrJ+UHW1bAZtecQd23Owetb3OevAAn+1NnNjF1wF6t05kxNjv0DSn
   #    0qP82T80jAI/TzIuZMdE88ykHYSoDEfj0f0WwowihT6rKQQWvH3bk7gds6GVOzh9
   #    LHxk+3Q+mkzixe6UN/VhpXq4nz1WewR1VfvY6rchi2q5vqFHhG/DcuRwNGfvbcjs
   #    bFz5K/PyicH4i2bXPJIjoulNv4aLOWQXil+3tzn8Uqv21SGqpswI6h6BTffMTeHu
   #    /0R8ffDW4k6r++j8SuqP4GaaqrsCAwEAAaNmMGQwHQYDVR0OBBYEFA/Xg70Ofws0
   #    CHd0s49+UHtTL613MB8GA1UdIwQYMBaAFPssAmSXYDiQkMpbRwdxo4kazWDiMBIG
   #    A1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUA
   #    A4ICAQAMNF3iH3cEn2rMeb3C2pvvG4E4arbE9jW/lbo8a5+aWTlsJlKmDvHrpjkJ
   #    EEmizB716Ev0U51l+4aTvgXyBYRF3GhrgF64XJWinJQ7jc8DS5yGyGAruX87wgoq
   #    hL/xsmOVuOxt2ZkH9ev6xwkCHCO7Zp2jMpJAUq/p+4Uv9wxKB9/jDYhdypjgPxSP
   #    mPNqwlF1NQvILtOfQ0PEyVw+4Hki7alC3AD8IPbVN71rHdroASRyYqZWKfQicKIj
   #    wv1K6d+X9IvFy2sinHn+H0iCa1CD69oR96fCAz+seNcM1rvx8ctND9LD7wbq2DKN
   #    TrK0ROSrxXWdVFVn/YpkpCnQKnwPnnOqJ7Yaicw1toVfYnXfZe0ZExHLUoYlFVH6
   #    rIgTSsnYpLeAtuc/P4orF5LGmzNjob3rIv3vNJIyBEXnydz2aEEySIYZH1k7kaZa
   #    0TpeA6+Fgs0yqgI7Gdf/gV5jDq2wO7FVBR1eqZMkVI8FzKrffCYQeKWADbi/UQOJ
   #    +mm0WykSLkFXi+yE36ijjq9X2HxLceO9XQYTiNtenQ9+bZk526L35rVhxszPFCbX
   #    wPS0BDH1hHcabQMXTAHZYX2w8ddlCWd9KLHIkSntsjxkiDsQzcd6hdd0mvWSp34H
   #    9muRVbct5CXpPowSYuuzk8CJtxlckKIqnm59ScGgcPk1IhMQlw==
   #    -----END CERTIFICATE-----

   - key: "CLIENT_CERT_PEM"
     value: |
      -----BEGIN CERTIFICATE-----
      MIIE7TCCAtWgAwIBAgICAM4wDQYJKoZIhvcNAQELBQAwUzELMAkGA1UEBhMCVVMx
      DjAMBgNVBAgMBVRleGFzMRMwEQYDVQQKDApXaWdXYWcgSW5jMR8wHQYDVQQDDBZX
      aWdXYWcgSW50ZXJtZWRpYXRlIENBMB4XDTE3MDgzMTIwMzcxMVoXDTM3MDgyNjIw
      MzcxMVowWDELMAkGA1UEBhMCVVMxDjAMBgNVBAgMBVRleGFzMQ8wDQYDVQQHDAZB
      dXN0aW4xEzARBgNVBAoMCldpZ1dhZyBJbmMxEzARBgNVBAMMCldXU1IwMDAwMUMw
      ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX7mb5WA9syPEU7TaHb+c/
      fb1sqOR3jx5GFyaY89Frjg+WhqZ+RjoEph4BVYfwnyWjUL3uwe4+EUb1n5UBhMM0
      3LYh6QMI1QeZB23IbZ4t9xQTnbKSaAiEIKz0Eiq7uSg3hIdq9OGIEaTZhq5Vbr1f
      4mENM2PXhnRBeSiyfnDg9tTeZb7f/PgCdYg6YYnPmtodMgQPSiK/PTA71vMP1YPy
      4tn6Oj4OHMnlGgAnEYzPLRWZtHXSZk3LvR5QhoA0PNlCDYy0of4TgkJ7NkeJjFZr
      d5lu/ZwWmR9xY45qkctTZCb9QMKuHO+OMDlk+EG8zUBFCWlSG1jBkRp/gjgOsLuB
      AgMBAAGjgcUwgcIwCQYDVR0TBAIwADARBglghkgBhvhCAQEEBAMCBeAwMwYJYIZI
      AYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIENsaWVudCBDZXJ0aWZpY2F0ZTAd
      BgNVHQ4EFgQUr/3/Cjf7MUx/ORUEFFkozF/f8WEwHwYDVR0jBBgwFoAUD9eDvQ5/
      CzQId3Szj35Qe1MvrXcwDgYDVR0PAQH/BAQDAgXgMB0GA1UdJQQWMBQGCCsGAQUF
      BwMCBggrBgEFBQcDATANBgkqhkiG9w0BAQsFAAOCAgEACAo1uo9JXhFUk17Xap3w
      kwTshMXUh8ycoLfZsjPKlDMJmle7bpnWiBQpTkD75MWbt+k3xoZyuMP1mStCXh15
      E9fk8StvA7TiHO8p1U4yZUsa7519DOzXR7EZQ3bz3m1Ccc8yNt6qXP0p/jsGDNao
      gJkGTARptGAE390xX/dy7sRhK5vhCLaj3ppIT5sP9ZzOKlrf/Lu+hYVPEqCXJFEK
      JAJ+s/k28bS/Lq1AxccghWtWhKc6L8uYHtSOpOIjs58lwn4EnNslkU80H+tyuX7V
      yHknmxKqBJ4mLzupCFd6EQhIwMtlODwZ/DLzMBNGkYkIdElNzxj5eqHyM2Ny9a/m
      szrwxW29xCoF6e6ThnVDQD02GpKX+37wvPEwXeha93zCaM1xgVB+SHLHqy4Ehfpu
      fNrmktG951wLoe8GDW/oW284RGZlI63jGR7iAZn1d1EfqMs2xs2T6MjmPUdyypou
      wXkSl1Z4qtr9EnocHKpwidQ3YZfd/laucJvfhQATNwrqljpFnbO6c5ojJzhreLhw
      Pi+AtbtpfZgHZWCfudwWqjkWx7O71voDZiC9TeAR6mUW4pgeAIHiQ8MZGyYHMnUc
      3CWvqigHp03F+Hgy6R/AjZXr3/W/XA3qmqsQDzG6sVYwbCluYxtvuZomWcqHyaOy
      xrnTpM/BnpfqugNNyBj4HzI=
      -----END CERTIFICATE-----

   - key: "CLIENT_KEY_PEM"
     value: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEowIBAAKCAQEA1+5m+VgPbMjxFO02h2/nP329bKjkd48eRhcmmPPRa44Ploam
      fkY6BKYeAVWH8J8lo1C97sHuPhFG9Z+VAYTDNNy2IekDCNUHmQdtyG2eLfcUE52y
      kmgIhCCs9BIqu7koN4SHavThiBGk2YauVW69X+JhDTNj14Z0QXkosn5w4PbU3mW+
      3/z4AnWIOmGJz5raHTIED0oivz0wO9bzD9WD8uLZ+jo+DhzJ5RoAJxGMzy0VmbR1
      0mZNy70eUIaANDzZQg2MtKH+E4JCezZHiYxWa3eZbv2cFpkfcWOOapHLU2Qm/UDC
      rhzvjjA5ZPhBvM1ARQlpUhtYwZEaf4I4DrC7gQIDAQABAoIBAC+n7hIZ3U2lC5AS
      ynYZvG/G0IeqvsGkVIojkeEv7ohOUiJmlVhJJ4TfJMAmoFn6xdPFfiWzp2ELbx3G
      mpw7MNn53DiftIu+eG7NtO0HRGHgpg2uQDsPutFuZL15RPUpaDbYiQqSATSGsFtR
      3if8yM7gp4rCTMbEZeQNWW4Led4sM/LW9wFgo35dF8Nusmh8y5SqkXHrC8StEW3B
      QkkxS9IL99ZOU0Y4Ic4NbQi+R7bLcnbvyDXBQWivNJKdSwsx0PJGfNuyt06iethg
      mXDPkTIxIJWUyQ/rkDTIPpAcepV2hfXGfuhbLsxqWX/rU39whtzFXKNRSOAM8798
      o72ygAECgYEA9Hava1WAGyRF/B81688Hj69LHuyNMa26YuoJJOPs1HE9PXjlGFa5
      rDdp99Xku8ZwqUN3H9USU/g7L23u0J3t5rx+2sTS08I2GlT7D0Ciza6qdyfrfMLd
      wHHA/7A/qTfYBOcmUc0++cXd54DkC7VMc8MDlfeToEf+mrxlLYt+o5ECgYEA4h8G
      Aq9zJfKQklOxdfIloDVwakuUNDA4yFBXJlcsRzwg58raEzqVYYiamOp2J1DkeME+
      e9alsJacmeWsrt7cCs2jYgonLtMbR/UJoVJhkcSwe6VG0aafndwWUkLnd0/qzFi2
      9bZ+ZlsiEteIijpnxFflF7siH9BoPLXL/icMwPECgYA6T1ToNSypTK2kxY0HAgq7
      qwQwDBxhjR64GTq1IeiLg7cnwn5in80J1u3fv5UfdOXKed0gKqKEhOEZHw+nkwP7
      1VostGXVPK3K+hooOTKb/N2MLmltCM376SYv1spYgol0Ie5x9JLg4OFdJtE+ObBS
      rGFek/8SbBm+rtEzW+KJAQKBgDEQIjG69/Un6I6Xck3xOJDGh5nIxGN+gxOTuxUq
      nQTn2wvwS9kYQQlkpoa/eNuXBbvd0jz0mgby5w/NceaPnJcLf4PqSA406Bp45JoI
      Ufta/iAWAIPE76VE9+LpeWe+A2hLZ4dxDYQQChikg4/alGFZ4O+BPypAAh4KJDUF
      LBNBAoGBAJ02An4SFF06KhozejUxH+2WenFf5HKCauK8S8tXZG32BuZa884AUutX
      xWgcEMXwVWAbwPXMN8Ff8Ce8Ab7JREjNq2iK8krosd483wtLv23cc7/ZkS1kE+z+
      8TGy2TtGzO/RVMbB648Bq9xk7cBzBmICwZ4li3OPbRMoGEVYIGDH
      -----END RSA PRIVATE KEY-----

stats:
    interval: 5 # frequency in seconds - default 300
    check_mem: true # default true
    check_mem_pace: 1  # means check every interval (default is 1 - every interval)
targets:
   - tty: "console"
     delim: "\n"
     format_time: "[%ld:%d] "
     format_level: "<%s> "
     format_tag: "{%s} "
     format_origin: "(%s) "
     filters:
       - level: log,user1,user2
         format_pre: "\u001B[39m"    # normal       
       - level: trace
         format_pre: "\u001B[35m"    # purple
         format_post: "\u001B[39m"         
       - level: info
         format_pre: "\u001B[2m"     # 'dim' text
         format_post: "\u001B[39m"
       - levels: success
         format_pre: "\u001B[32m"    # green
         format_post: "\u001B[39m"       
       - levels: warn
         format_pre: "\u001B[33m"    # yellow
         format_post: "\u001B[39m"       
       - levels: error
         format_pre: "\u001B[31m"    # red
         format_post: "\u001B[39m"
       - levels: debug
         format_pre: "\u001B[36m"    # cyan
         format_post: "\u001B[39m"
       - levels: debug2,debug3
         format_pre: "\u001B[34m"    # blue
         format_post: "\u001B[39m"
         

#    - file: "{{TMP_DIR}}/maestro.log"
#      rotate:
#          max_files: 10
#          max_file_size: 10000
#          max_total_size: 100000
#          rotate_on_start: true
#      delim: "\n"
#      format_time: "[%ld:%d] "
#      format_level: "<%s> "
#      format_tag: "{%s} "
#      format_origin: "(%s) "
#      filters:
#        - levels: all
#          format_pre: "PRE"
# # JSON file
#    - file: /tmp/json-maestro.log
#      rotate:
#          max_files: 10
#          max_file_size: 10000
#          max_total_size: 100000
#          rotate_on_start: true
#      delim: "],\n"
#      format_time: "{\"time\":\"%ld:%d\"}, "
#      format_level: "{\"level\":\"%s\"}, "
#      format_tag: "{\"tag\":\"%s\"}, "
#      format_origin: "{\"origin\":\"%s\"}, "
#      format_pre_msg: "{ \"msg\":\""
#      format_post: "\"}"
#      flag_json_escape_strings: true
#      filters:
#        - levels: all
#          format_pre: "["     # you will wrap this output with { "log": [ OUTPUT ] }
# #         format_post: "]}"  # I am not sure if this works
#    - name: "toCloud"  # this is a special target for sending to the cloud. It must send as a JSON
#      format_time: "\"time\":\"%ld:%d\", "
#      format_level: "\"level\":\"%s\", "
#      format_tag: "\"tag\":\"%s\", "
#      format_origin: "\"origin\":\"%s\", "
#      format_pre_msg: "\"msg\":\""
#      format_post: "\"}"
#      flag_json_escape_strings: true
#      filters:
#        - levels: all
#          format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
container_templates:
   - name: "deviceJS_process"
     immutable: true  # don't store in DB
     cgroup:                 # will implement later
        mem_limit: 10000000
     inherit_env: true
     add_env:
        - "DEVJS_ROOT={{DEVICEJS_ROOT}}"
        - "DEVJS_CONFIG_FILE={{DEVICEJS_ROOT}}/.local/etc/devicejs/devicejs.conf"
#        - "NODE_PATH=${WIGWAG_DIR}"
     exec_cmd: "{{NODE_EXEC}}"        # will use PATH if not absolute path (as per execvp())
     send_composite_jobs_to_stdin: true
     send_grease_origin_id: true
     exec_pre_args: 
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
        - "--max-semi-space-size=1"
        - "{{MAESTRO_RUNNER_DIR}}/index.js"
     composite_config: >
        {
           "debug":true
        } 
#     exec_post_args: 
   - name: "node_process"
     cgroup:                 # will implement later
        mem_limit: 10000000
     exec_cmd: "{{NODE_EXEC}}"        # {{CMD}} will be filled in by the exec_cmd field below
     exec_pre_args: 
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
     # exec_post_args: 
     #    - "whatev"
#     uses_ok_string: true     
   - name: "node_process2"
     cgroup:                 # will implement later
        mem_limit: 10000000
     exec_cmd: "{{NODE_EXEC}}"
     exec_pre_args: 
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
     exec_post_args: 
        - "whatev2"
jobs:
   # - job: "devicedb"
   #   immutable: true

   # - job: "test_basic_devjs_1"
   #   immutable: true  # don't store in DB
   #   exec_cmd: "{{cwd}}/test-assets/basic-devjs.js"
   #   container_template: "deviceJS_process"
   #   composite_id: "test1"
   #   config: |
   #      {  "stuff" : "TEST1"
   #      }
   #   # message: "birds ENDCONFIG"
   #   # exec_args:
   #   #    - "Apples"
   # - job: "test_basic_devjs_2"
   #   immutable: true  # don't store in DB
   #   exec_cmd: "{{cwd}}/test-assets/basic-devjs.js"
   #   composite_id: "test1"
   #   container_template: "deviceJS_process"
   #   # message: "monkeys ENDCONFIG"
   #   config: |
   #      {  "stuff" : "TEST2"
   #      }



   # - job: "core-lighting"
   #   composite_id: "core-modules"
   #   exec_cmd: "{{DEVJS_CORE_MODULES}}/core-lighting"
   #   container_template: "deviceJS_process"
   #   config: |
   #      {  "stuff" : "example"
   #      }
   # - job: "core-interfaces"
   #   composite_id: "core-modules"
   #   exec_cmd: "{{DEVJS_CORE_MODULES}}/core-lighting"
   #   container_template: "deviceJS_process"
   #   config: |
   #      {  "stuff" : "example"
   #      }


     # exec_args:
     #    - "Bannanas"


       # - job: "test_ok_string_exit"
   #   exec_cmd: "{{cwd}}/auxtests/test-node-exit.js"
   #   container_template: "node_process"


#    - job: "devicejs"
#      exec_cmd: "node {{CMD}}"        # {{CMD}} will be filled in by the exec_cmd field below
#      exec_args: 
#         - "--max-executable-size=96"
#         - "--max-old-space-size=128"
#         - "--max-semi-space-size=1"
#         - "devicejs"
#    - job: "core_modules"
#      container_template: "deviceJS_process"
#      message: |
#                 "path" : "${thisdir}/../AppServer",
#                 "config": {}
#                 },
#                 {
#                 "path" : "${thisdir}/../APIProxy",
#                 "config": {}
#                 },
#                 {
#                     "path" : "${thisdir}/../core-lighting",
#                     "config": {}
#                 }
# #                {
# #                    "path" : "${thisdir}/../UPnP",
# #                    "config": {}
# #                },
#      restart: true
#      restart_limit: 5000
#      restart_pause: 100     # 100 seconds between restarts 
#    - job: "support_tunnel"
#      depends_on:            # these services must be running first
#         - "devicejs"
#      #    - "core_modules"
#      restart_on_dependency_fail: true  # kill the process and restart it if it's dependencies fail
#      no_autostart: false       # don't start it when maestro starts. But the job is available for start
#      container_template: "node_process"
#      exec_cmd: "/wigwag/support.js"  
#      exec_args:
#         - "some arg"      
#     
#   - tty: sometty

config_end: true
