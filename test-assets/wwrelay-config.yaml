unixLogSocket: /tmp/grease.socket
sysLogSocket: /dev/log
httpUnixSocket: /tmp/maestroapi.sock
clientId: WWRL000001
platform_readers:
  - platform: "wwrelayA10"
relaymq:
    host: devcloud.wigwag.io
    logging: true
#     ---Only specify server_name if the RootCA is not in the default list
#     This is only a valid option if you are not using a well-known CA
#    server_name: "devcloud.wigwag.io"
    # client_cert: |  
    #   -----BEGIN CERTIFICATE-----
    #   MIIE7TCCAtWgAwIBAgICAM4wDQYJKoZIhvcNAQELBQAwUzELMAkGA1UEBhMCVVMx
    #   DjAMBgNVBAgMBVRleGFzMRMwEQYDVQQKDApXaWdXYWcgSW5jMR8wHQYDVQQDDBZX
    #   aWdXYWcgSW50ZXJtZWRpYXRlIENBMB4XDTE3MDgzMTIwMzcxMVoXDTM3MDgyNjIw
    #   MzcxMVowWDELMAkGA1UEBhMCVVMxDjAMBgNVBAgMBVRleGFzMQ8wDQYDVQQHDAZB
    #   dXN0aW4xEzARBgNVBAoMCldpZ1dhZyBJbmMxEzARBgNVBAMMCldXU1IwMDAwMUMw
    #   ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX7mb5WA9syPEU7TaHb+c/
    #   fb1sqOR3jx5GFyaY89Frjg+WhqZ+RjoEph4BVYfwnyWjUL3uwe4+EUb1n5UBhMM0
    #   3LYh6QMI1QeZB23IbZ4t9xQTnbKSaAiEIKz0Eiq7uSg3hIdq9OGIEaTZhq5Vbr1f
    #   4mENM2PXhnRBeSiyfnDg9tTeZb7f/PgCdYg6YYnPmtodMgQPSiK/PTA71vMP1YPy
    #   4tn6Oj4OHMnlGgAnEYzPLRWZtHXSZk3LvR5QhoA0PNlCDYy0of4TgkJ7NkeJjFZr
    #   d5lu/ZwWmR9xY45qkctTZCb9QMKuHO+OMDlk+EG8zUBFCWlSG1jBkRp/gjgOsLuB
    #   AgMBAAGjgcUwgcIwCQYDVR0TBAIwADARBglghkgBhvhCAQEEBAMCBeAwMwYJYIZI
    #   AYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIENsaWVudCBDZXJ0aWZpY2F0ZTAd
    #   BgNVHQ4EFgQUr/3/Cjf7MUx/ORUEFFkozF/f8WEwHwYDVR0jBBgwFoAUD9eDvQ5/
    #   CzQId3Szj35Qe1MvrXcwDgYDVR0PAQH/BAQDAgXgMB0GA1UdJQQWMBQGCCsGAQUF
    #   BwMCBggrBgEFBQcDATANBgkqhkiG9w0BAQsFAAOCAgEACAo1uo9JXhFUk17Xap3w
    #   kwTshMXUh8ycoLfZsjPKlDMJmle7bpnWiBQpTkD75MWbt+k3xoZyuMP1mStCXh15
    #   E9fk8StvA7TiHO8p1U4yZUsa7519DOzXR7EZQ3bz3m1Ccc8yNt6qXP0p/jsGDNao
    #   gJkGTARptGAE390xX/dy7sRhK5vhCLaj3ppIT5sP9ZzOKlrf/Lu+hYVPEqCXJFEK
    #   JAJ+s/k28bS/Lq1AxccghWtWhKc6L8uYHtSOpOIjs58lwn4EnNslkU80H+tyuX7V
    #   yHknmxKqBJ4mLzupCFd6EQhIwMtlODwZ/DLzMBNGkYkIdElNzxj5eqHyM2Ny9a/m
    #   szrwxW29xCoF6e6ThnVDQD02GpKX+37wvPEwXeha93zCaM1xgVB+SHLHqy4Ehfpu
    #   fNrmktG951wLoe8GDW/oW284RGZlI63jGR7iAZn1d1EfqMs2xs2T6MjmPUdyypou
    #   wXkSl1Z4qtr9EnocHKpwidQ3YZfd/laucJvfhQATNwrqljpFnbO6c5ojJzhreLhw
    #   Pi+AtbtpfZgHZWCfudwWqjkWx7O71voDZiC9TeAR6mUW4pgeAIHiQ8MZGyYHMnUc
    #   3CWvqigHp03F+Hgy6R/AjZXr3/W/XA3qmqsQDzG6sVYwbCluYxtvuZomWcqHyaOy
    #   xrnTpM/BnpfqugNNyBj4HzI=
    #   -----END CERTIFICATE-----

    # client_key: |
    #   -----BEGIN RSA PRIVATE KEY-----
    #   MIIEowIBAAKCAQEA1+5m+VgPbMjxFO02h2/nP329bKjkd48eRhcmmPPRa44Ploam
    #   fkY6BKYeAVWH8J8lo1C97sHuPhFG9Z+VAYTDNNy2IekDCNUHmQdtyG2eLfcUE52y
    #   kmgIhCCs9BIqu7koN4SHavThiBGk2YauVW69X+JhDTNj14Z0QXkosn5w4PbU3mW+
    #   3/z4AnWIOmGJz5raHTIED0oivz0wO9bzD9WD8uLZ+jo+DhzJ5RoAJxGMzy0VmbR1
    #   0mZNy70eUIaANDzZQg2MtKH+E4JCezZHiYxWa3eZbv2cFpkfcWOOapHLU2Qm/UDC
    #   rhzvjjA5ZPhBvM1ARQlpUhtYwZEaf4I4DrC7gQIDAQABAoIBAC+n7hIZ3U2lC5AS
    #   ynYZvG/G0IeqvsGkVIojkeEv7ohOUiJmlVhJJ4TfJMAmoFn6xdPFfiWzp2ELbx3G
    #   mpw7MNn53DiftIu+eG7NtO0HRGHgpg2uQDsPutFuZL15RPUpaDbYiQqSATSGsFtR
    #   3if8yM7gp4rCTMbEZeQNWW4Led4sM/LW9wFgo35dF8Nusmh8y5SqkXHrC8StEW3B
    #   QkkxS9IL99ZOU0Y4Ic4NbQi+R7bLcnbvyDXBQWivNJKdSwsx0PJGfNuyt06iethg
    #   mXDPkTIxIJWUyQ/rkDTIPpAcepV2hfXGfuhbLsxqWX/rU39whtzFXKNRSOAM8798
    #   o72ygAECgYEA9Hava1WAGyRF/B81688Hj69LHuyNMa26YuoJJOPs1HE9PXjlGFa5
    #   rDdp99Xku8ZwqUN3H9USU/g7L23u0J3t5rx+2sTS08I2GlT7D0Ciza6qdyfrfMLd
    #   wHHA/7A/qTfYBOcmUc0++cXd54DkC7VMc8MDlfeToEf+mrxlLYt+o5ECgYEA4h8G
    #   Aq9zJfKQklOxdfIloDVwakuUNDA4yFBXJlcsRzwg58raEzqVYYiamOp2J1DkeME+
    #   e9alsJacmeWsrt7cCs2jYgonLtMbR/UJoVJhkcSwe6VG0aafndwWUkLnd0/qzFi2
    #   9bZ+ZlsiEteIijpnxFflF7siH9BoPLXL/icMwPECgYA6T1ToNSypTK2kxY0HAgq7
    #   qwQwDBxhjR64GTq1IeiLg7cnwn5in80J1u3fv5UfdOXKed0gKqKEhOEZHw+nkwP7
    #   1VostGXVPK3K+hooOTKb/N2MLmltCM376SYv1spYgol0Ie5x9JLg4OFdJtE+ObBS
    #   rGFek/8SbBm+rtEzW+KJAQKBgDEQIjG69/Un6I6Xck3xOJDGh5nIxGN+gxOTuxUq
    #   nQTn2wvwS9kYQQlkpoa/eNuXBbvd0jz0mgby5w/NceaPnJcLf4PqSA406Bp45JoI
    #   Ufta/iAWAIPE76VE9+LpeWe+A2hLZ4dxDYQQChikg4/alGFZ4O+BPypAAh4KJDUF
    #   LBNBAoGBAJ02An4SFF06KhozejUxH+2WenFf5HKCauK8S8tXZG32BuZa884AUutX
    #   xWgcEMXwVWAbwPXMN8Ff8Ce8Ab7JREjNq2iK8krosd483wtLv23cc7/ZkS1kE+z+
    #   8TGy2TtGzO/RVMbB648Bq9xk7cBzBmICwZ4li3OPbRMoGEVYIGDH
    #   -----END RSA PRIVATE KEY-----

var_defs:
   - key: "TMP_DIR"
     value: "/tmp"
   - key: "WIGWAG_DIR"
     value: "/wigwag"
   - key: "NODE_EXEC"
     value: "/wigwag/devicejs-ng/.local/bin/node"
   - key: "DEVICEJS_ROOT"
     value: "/wigwag/devicejs-ng"
   - key: "DEVJS_CORE_MODULES"
     value: "/wigwag/devicejs-core-modules"
   - key: "MAESTRO_RUNNER_DIR"
     value: "/wigwag/devicejs-core-modules/maestroRunner"
   - key: "SSL_CERTS_PATH"
     value: "/wigwag/devicejs-core-modules/Runner/.ssl"
   - key: "LOCAL_DEVICEDB_PORT"
     value: "${LOCAL_DEVICEDB_PORT|9000}"
   - key: "LOCAL_DATABASE_STORAGE_DIRECTORY"
     value: "/userdata/etc/devicejs/db"
   - key: "RELAY_VERSIONS_FILE"
     value: "/wigwag/etc/versions.json"
   - key: "FACTORY_VERSIONS_FILE"
     value: "/mnt/.overlay/factory/wigwag/etc/versions.json"
   - key: "USER_VERSIONS_FILE"
     value: "/mnt/.overlay/user/slash/wigwag/etc/versions.json"
   - key: "UPGRADE_VERSIONS_FILE"
     value: "/mnt/.overlay/upgrade/wigwag/etc/versions.json"
stats:
    interval: 5 # frequency in seconds - default 300
    check_mem: true # default true
    check_mem_pace: 1  # means check every interval (default is 1 - every interval)
devicedb_conn_config:
    devicedb_uri: "https://WWRL000000:9090" #default test uri
    devicedb_prefix: "wigwag.configs.relay" #default prefix
    devicedb_bucket: "local" #default bucket
    relay_id: "WWRL000000" #default test relay id
    ca_chain: "{{SSL_CERTS_PATH}}/ca-chain.cert.pem" #default chain cert file name    
targets:
   - file: "{{TMP_DIR}}/maestro.log"
     rotate:
         max_files: 10
         max_file_size: 10000
         max_total_size: 100000
         rotate_on_start: true
     delim: "\n"
     format_time: "[%ld:%d] "
     format_level: "<%s> "
     format_tag: "{%s} "
     format_origin: "(%s) "
     filters:
       - levels: all
         format_pre: "PRE"
# JSON file
   - file: /tmp/json-maestro.log
     rotate:
         max_files: 10
         max_file_size: 10000
         max_total_size: 100000
         rotate_on_start: true
     delim: "],\n"
     format_time: "{\"time\":\"%ld:%d\"}, "
     format_level: "{\"level\":\"%s\"}, "
     format_tag: "{\"tag\":\"%s\"}, "
     format_origin: "{\"origin\":\"%s\"}, "
     format_pre_msg: "{ \"msg\":\""
     format_post: "\"}"
     flag_json_escape_strings: true
     filters:
       - levels: all
         format_pre: "["     # you will wrap this output with { "log": [ OUTPUT ] }
#         format_post: "]}"  # I am not sure if this works
   - name: "toCloud"  # this is a special target for sending to the cloud. It must send as a JSON
     format_time: "\"time\":\"%ld:%d\", "
     format_level: "\"level\":\"%s\", "
     format_tag: "\"tag\":\"%s\", "
     format_origin: "\"origin\":\"%s\", "
     format_pre_msg: "\"msg\":\""
     format_post: "\"}"
     flag_json_escape_strings: true
     filters:
       - levels: all
         format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
static_file_generators:
   - name: "devicejs"
     template_file: "/wigwag/wwrelay-utils/templates/template.devicejs.conf"
     output_file: "/wigwag/etc/devicejs/devicejs.conf" 
   - name: "devicedb"
     template_file: "/wigwag/wwrelay-utils/templates/template.devicedb.conf"
     output_file: "/wigwag/etc/devicejs/devicedb.yaml"  
   - name: "relayTerm"
     template_file: "/wigwag/wwrelay-utils/templates/relayTerm.template.json"
     output_file: "/wigwag/wigwag-core-modules/relay-term/config/config.json"  
   - name: "radioProfile"
     template_file: "/wigwag/wwrelay-utils/templates/radioProfile.template.json"
     output_file: "/wigwag/devicejs-core-modules/rsmi/radioProfile.config.json"  
container_templates:
   - name: "deviceJS_process"
     immutable: true  # don't store in DB
     cgroup:                 # will implement later
        mem_limit: 10000000
     inherit_env: true
     add_env:
        - "DEVJS_ROOT={{DEVICEJS_ROOT}}"
        - "DEVJS_CONFIG_FILE=/wigwag/etc/devicejs/devicejs.conf"
#        - "NODE_PATH=${WIGWAG_DIR}"
     exec_cmd: "{{NODE_EXEC}}"        # will use PATH if not absolute path (as per execvp())
     send_composite_jobs_to_stdin: true
     send_grease_origin_id: true
     exec_pre_args: 
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
        - "--max-semi-space-size=1"
        - "{{MAESTRO_RUNNER_DIR}}/index.js"
     composite_config: >
        {
           "debug":true
        }
jobs:
   - job: "sixlbr"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../wigwag-devices"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {
          "cloudURL":"{{ARCH_CLOUD_URL}}",
          "ssl":{
              "key":"{{SSL_CERTS_PATH}}/client.key.pem",
              "cert":"{{SSL_CERTS_PATH}}/client.cert.pem",
              "ca":[
                  "{{SSL_CERTS_PATH}}/ca.cert.pem",
                  "{{SSL_CERTS_PATH}}/intermediate.cert.pem"
              ]
          },
          "apiKey":"{{ARCH_RELAYID}}",
          "udpSourcePort":3000,
          "udpDestinationPort":3001,
          "platform":"{{ARCH_WW_PLATFORM}}",
          "sixlbr":{
              "ifname":"Witap0",
              "wsnNet":"bbbb::100",
              "sixlbr":{
                  "tundev":"Witap0",
                  "use_raw_ethernet":false,
                  "log_level":[
                      "error"
                  ],
                  "platform":"{{ARCH_WW_PLATFORM}}",
                  "siodev":"ttyUSB0",
                  "siodev_secondary":"ttyUSB1",
                  "sixBMAC":"{{ARCH_SIXLBR_MAC}}",
                  "baudrate":115200,
                  "slip_delay":0,
                  "watchdog_interval": 0,
                  "ww_encryption":true,
                  "firmware_path_mc1322":"/home/wigwag/workspace/devicejs/core/",
                  "firmware_file_prefix":"slip-radio_econotag",
                  "reset_GPIO_path_firmware_mc1322":"/sys/class/gpio/gpio105/value",
                  "erase_GPIO_path_firmware_mc1322":"/sys/class/gpio/gpio103/value",
                  "reset_GPIO_path_firmware_cc2530":"/sys/class/gpio/gpio98/value",
                  "relay_version":7,
                  "nvm_data":{
                      "channel":20,
                      "rpl_dio_intdoubl":1,
                      "rpl_dio_intmin":12,
                      "rpl_default_lifetime":4,
                      "rpl_lifetime_unit":100,
                      "rpl_version_id":247
                  }
              }
          }         
        }
   - job: "core-lighting"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../core-lighting"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {}
   - job: "sonos"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../sonos"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {}
   - job: "core-interfaces"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../core-interfaces"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {}
   - job: "zigbeeHA"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../zigbeeHA"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {
          "siodev":"/dev/ttyUSB0",
          "devType":0,
          "newNwk":false,
          "channelMask":25,
          "baudRate":115200,
          "log_level":1,
          "networkRefreshDuration":17000,
          "panIdSelection":"randomInRange",
          "panId":23,
          "platform":"{{ARCH_WW_PLATFORM}}",
          "logLevel": 2 //Available- info- 2, debug- 3, trace- 4, error- 0, warn- 1
        }
   - job: "RelayStatsSender"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/RelayStatsSender"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {
          "cloudAddress":"{{ARCH_CLOUD_URL}}",
          "relayID":"{{ARCH_RELAYID}}",
          "ssl":{
              "key":"{{SSL_CERTS_PATH}}/client.key.pem",
              "cert":"{{SSL_CERTS_PATH}}/client.cert.pem",
              "ca":[
                  "{{SSL_CERTS_PATH}}/ca.cert.pem",
                  "{{SSL_CERTS_PATH}}/intermediate.cert.pem"
              ]
          },
          "versionsFile":"{{RELAY_VERSIONS_FILE}}",
          "factoryVersionsFile": "{{FACTORY_VERSIONS_FILE}}",
          "userVersionsFile": "{{USER_VERSIONS_FILE}}",
          "upgradeVersionsFile": "{{UPGRADE_VERSIONS_FILE}}",
          "relayInfo": {
              "pairingCode": "{{ARCH_PAIRING_CODE}}",
              "serialNumber": "{{ARCH_RELAYID}}",
              "hardwareVersion": "{{ARCH_HARDWARE_VERSION}}",
              "radioConfig": "{{ARCH_RADIO_CONFIG}}",
              "ledConfig": "{{ARCH_LED_COLOR_PROFILE}}",
              "cloudServer": "{{ARCH_CLOUD_URL}}",
              "devicejsServer": "{{ARCH_CLOUD_DEVJS_URL}}",
              "devicedbServer": "{{ARCH_CLOUD_DDB_URL}}",
              "ethernetMac": "{{ARCH_ETHERNET_MAC}}"   
          }
        }
   - job: "ww-zwave"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../ww-zwave"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {
          "serialInterfaceOptions":{
              "siodev":"/dev/ttyUSB0",
              "baudrate":115200,
              "dataBits":8,
              "stopBits":1
          },
          "platform":"{{ARCH_WW_PLATFORM}}"
        }
   - job: "IPStack"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../IPStack"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {
          "wan":[
              "eth0",
              "eth1",
              "wlan0"
          ],
          "dhcp":"on",
          "static":{
              "ipaddress":"10.10.20.31",
              "mask":"255.255.255.0",
              "gateway":"10.10.20.1"
          },
          "ethernetMAC":"{{ARCH_ETHERNET_MAC}}"
        }
   - job: "MDNS"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/MDNS"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {
          "id":"{{ARCH_RELAYID}}",
          "waitForIPStack":true,
          "port":443
        }
   - job: "VirtualDeviceDriver"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/VirtualDeviceDriver"
     container_template: "deviceJS_process"
     composite_id: "all-modules"
     config: |
        {
          "deviceControllersDirectory": "templates",
          "logLevel": 2
        }
   - job: "ModbusRTU"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../ModbusRTU"
     container_template: "deviceJS_process"
     composite_id: "modbus"
     config: |
        {
          "serialInterfaceOptions":{ //Serial communication setup parameters
              "siodev":"/dev/ttyUSB0",
              "baudrate":19200,
              "dataBits":8,
              "stopBits":1,
              "parity":"none",
              "endPacketTimeout":15
          },
          "logLevel":1,   //Available- info- 2,debug- 3,trace- 4,error- 0,warn- 1
          "relayId": "{{ARCH_RELAYID}}",
          "platform":"{{ARCH_WW_PLATFORML}}",    //Used to identify platform so that module can adapt and run automagically
          "maxTransportRetries":1, //Transport layer retries, message retries are default to 3 so total retries will be 4
          "requestAckTimeout":100,  //Timeout if no data received on request (in ms)
          "throttleRate": 50,
          "modbusResourceId":"ModbusDriver", //ID on which the Modbus module will be registered with DeviceJS
          "supportedResourceTypesDirectory":"controllers/supportedResourceTypes", //Directory where all the resouces are or will be defined,
          "runtimeResourceTypesDirectory":"controllers/runtimeResourceTypes",
          "simulate":false, //Should be false in production, if true it will run even if there is no terminal connected
          "schedulerIntervalResolution":500    //in ms, interval in which it will check if a resource command needs to be polled. Minimum 500ms.
                                              //Define polling interval of device controller at this resolution
        }
   - job: "RuleEngine"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/RuleEngine"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {
          "cloudAddress":"{{ARCH_CLOUD_URL}}",
          "relayID":"{{ARCH_RELAYID}}",
          "ssl":{
              "key":"{{SSL_CERTS_PATH}}/client.key.pem",
              "cert":"{{SSL_CERTS_PATH}}/client.cert.pem",
              "ca":[
                  "{{SSL_CERTS_PATH}}/ca.cert.pem",
                  "{{SSL_CERTS_PATH}}/intermediate.cert.pem"
              ]
          }
        }
   - job: "SchedulerEngine"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/SchedulerEngine"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {
          "logLevel": 2 //Available- error- 0, warn- 1, info- 2, debug- 3, trace- 4
        }
   - job: "AppServer"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../AppServer"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {
          "authentication":{
              "enabled":true,
              "cloudAPISecret":"{{ARCH_PAIRING_CODE}}",
              "redirectURL":"/wigwag-ui/s/login/",
              "cloudRedirectURL":"{{ARCH_CLOUD_URL}}/s/login"
          },
          "port":443,
          "ssl":{
              "key":"{{SSL_CERTS_PATH}}/client.key.pem",
              "cert":"{{SSL_CERTS_PATH}}/client.cert.pem",
              "ca":[
                  "{{SSL_CERTS_PATH}}/ca.cert.pem",
                  "{{SSL_CERTS_PATH}}/intermediate.cert.pem"
              ]
          },
          "relayID":"{{ARCH_RELAYID}}"
        }
   - job: "APIProxy"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../APIProxy"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {
          "cloudAPISecret":"{{ARCH_PAIRING_CODE}}",
          "apiKey":"hello",
          "apiSecret":"asdfdsfa"
        }
   - job: "WigWagMobileUI"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/WigWagMobileUI"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {}
   - job: "wigwag-ui"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/wigwag-ui"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {
            "cloudAPISecret":"{{ARCH_PAIRING_CODE}}"
        }
   - job: "WWRelayWebUI"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/WWRelayWebUI"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {}
   - job: "RuleUI"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/RuleUI"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {
          "debug_mode":true,
          "debug_level":3,    // goes up to 3, default 1
          "RULE_NODE_TYPES_DIRECTORY":[
              "${thisdir}/../RuleEngine/src/nodes"
          ],
          "FORMS_DIR":[
              {
                  "path":"${thisdir}/../../wigwag-core-modules/RuleUI/schemaFormDialogs",
                  "ignores":[
                      "_public"
                  ]
              }
          ]
        }
   - job: "moods"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/moods"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {
          "jwtSecret":"IXPySxxr0f5X2CIqdB45eK",
          "apiKey":"{{ARCH_RELAYID}}",
          "apiSecret":"{{ARCH_PAIRING_CODE}}"
        }
   - job: "DevStateManager"
     immutable: true  # don't store in DB
     exec_cmd: "${thisdir}/../../wigwag-core-modules/DevStateManager"
     container_template: "deviceJS_process"
     composite_id: "user"
     config: |
        {
          "logLevel": 2,
          "pollingResolution": 500,
          "defaultPollingRate": 51000,
          "maxPollingCycles": 65535,
          "pollingSchemes": {
              "fast": {
                  "interval": 21500,
                  "interfaces": [
                      "Facades/HasTemperature",
                      "Facades/ThermostatGStatus",
                      "Facades/ThermostatSupplyTemperature",
                      "Facades/ThermostatReturnTemperature",
                      "Facades/ThermostatW1Status",
                      "Facades/ThermostatW2Status",
                      "Facades/ThermostatY1Status",
                      "Facades/ThermostatY2Status"
                  ]  
              },
              "medium": {
                  "interval": 293500,
                  "interfaces": [
                      "Facades/ThermostatMode",
                      "Facades/OccupiedCoolTemperatureLevel",
                      "Facades/OccupiedHeatTemperatureLevel",
                      "Facades/UnoccupiedCoolTemperatureLevel",
                      "Facades/UnoccupiedHeatTemperatureLevel",
                      "Facades/ThermostatFanMode",
                      "Facades/OccupancyMode"
                  ]
              },
              "slow": {
                  "interval": 900000,
                  "interfaces": [
                  ]
              },
              "never": {
                  "interval": 0,
                  "interfaces": [
                      "Facades/KeypadLockLevel",
                      "Facades/TemperatureDisplayMode",
                      "Facades/ThermostatDeadband",
                      "Facades/Humidity",
                      "Facades/HasMotion",
                      "Facades/UnoccupiedAutoTemperatureLevel",
                      "Facades/OccupiedAutoTemperatureLevel"
                  ]
              }
          }
        }
config_end: true