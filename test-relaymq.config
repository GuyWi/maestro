unixLogSocket: /tmp/grease.socket
sysLogSocket: /dev/log
httpUnixSocket: "{{TMP_DIR}}/maestroapi.sock"
clientId: WWRL000001
relaymq:
    host: devcloud.wigwag.io
    logging: true
#     ---Only specify server_name if the RootCA is not in the default list
#     This is only a valid option if you are not using a well-known CA
#    server_name: "devcloud.wigwag.io"
    client_cert: |  
      -----BEGIN CERTIFICATE-----
      MIIE7TCCAtWgAwIBAgICAM4wDQYJKoZIhvcNAQELBQAwUzELMAkGA1UEBhMCVVMx
      DjAMBgNVBAgMBVRleGFzMRMwEQYDVQQKDApXaWdXYWcgSW5jMR8wHQYDVQQDDBZX
      aWdXYWcgSW50ZXJtZWRpYXRlIENBMB4XDTE3MDgzMTIwMzcxMVoXDTM3MDgyNjIw
      MzcxMVowWDELMAkGA1UEBhMCVVMxDjAMBgNVBAgMBVRleGFzMQ8wDQYDVQQHDAZB
      dXN0aW4xEzARBgNVBAoMCldpZ1dhZyBJbmMxEzARBgNVBAMMCldXU1IwMDAwMUMw
      ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX7mb5WA9syPEU7TaHb+c/
      fb1sqOR3jx5GFyaY89Frjg+WhqZ+RjoEph4BVYfwnyWjUL3uwe4+EUb1n5UBhMM0
      3LYh6QMI1QeZB23IbZ4t9xQTnbKSaAiEIKz0Eiq7uSg3hIdq9OGIEaTZhq5Vbr1f
      4mENM2PXhnRBeSiyfnDg9tTeZb7f/PgCdYg6YYnPmtodMgQPSiK/PTA71vMP1YPy
      4tn6Oj4OHMnlGgAnEYzPLRWZtHXSZk3LvR5QhoA0PNlCDYy0of4TgkJ7NkeJjFZr
      d5lu/ZwWmR9xY45qkctTZCb9QMKuHO+OMDlk+EG8zUBFCWlSG1jBkRp/gjgOsLuB
      AgMBAAGjgcUwgcIwCQYDVR0TBAIwADARBglghkgBhvhCAQEEBAMCBeAwMwYJYIZI
      AYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIENsaWVudCBDZXJ0aWZpY2F0ZTAd
      BgNVHQ4EFgQUr/3/Cjf7MUx/ORUEFFkozF/f8WEwHwYDVR0jBBgwFoAUD9eDvQ5/
      CzQId3Szj35Qe1MvrXcwDgYDVR0PAQH/BAQDAgXgMB0GA1UdJQQWMBQGCCsGAQUF
      BwMCBggrBgEFBQcDATANBgkqhkiG9w0BAQsFAAOCAgEACAo1uo9JXhFUk17Xap3w
      kwTshMXUh8ycoLfZsjPKlDMJmle7bpnWiBQpTkD75MWbt+k3xoZyuMP1mStCXh15
      E9fk8StvA7TiHO8p1U4yZUsa7519DOzXR7EZQ3bz3m1Ccc8yNt6qXP0p/jsGDNao
      gJkGTARptGAE390xX/dy7sRhK5vhCLaj3ppIT5sP9ZzOKlrf/Lu+hYVPEqCXJFEK
      JAJ+s/k28bS/Lq1AxccghWtWhKc6L8uYHtSOpOIjs58lwn4EnNslkU80H+tyuX7V
      yHknmxKqBJ4mLzupCFd6EQhIwMtlODwZ/DLzMBNGkYkIdElNzxj5eqHyM2Ny9a/m
      szrwxW29xCoF6e6ThnVDQD02GpKX+37wvPEwXeha93zCaM1xgVB+SHLHqy4Ehfpu
      fNrmktG951wLoe8GDW/oW284RGZlI63jGR7iAZn1d1EfqMs2xs2T6MjmPUdyypou
      wXkSl1Z4qtr9EnocHKpwidQ3YZfd/laucJvfhQATNwrqljpFnbO6c5ojJzhreLhw
      Pi+AtbtpfZgHZWCfudwWqjkWx7O71voDZiC9TeAR6mUW4pgeAIHiQ8MZGyYHMnUc
      3CWvqigHp03F+Hgy6R/AjZXr3/W/XA3qmqsQDzG6sVYwbCluYxtvuZomWcqHyaOy
      xrnTpM/BnpfqugNNyBj4HzI=
      -----END CERTIFICATE-----

    client_key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEowIBAAKCAQEA1+5m+VgPbMjxFO02h2/nP329bKjkd48eRhcmmPPRa44Ploam
      fkY6BKYeAVWH8J8lo1C97sHuPhFG9Z+VAYTDNNy2IekDCNUHmQdtyG2eLfcUE52y
      kmgIhCCs9BIqu7koN4SHavThiBGk2YauVW69X+JhDTNj14Z0QXkosn5w4PbU3mW+
      3/z4AnWIOmGJz5raHTIED0oivz0wO9bzD9WD8uLZ+jo+DhzJ5RoAJxGMzy0VmbR1
      0mZNy70eUIaANDzZQg2MtKH+E4JCezZHiYxWa3eZbv2cFpkfcWOOapHLU2Qm/UDC
      rhzvjjA5ZPhBvM1ARQlpUhtYwZEaf4I4DrC7gQIDAQABAoIBAC+n7hIZ3U2lC5AS
      ynYZvG/G0IeqvsGkVIojkeEv7ohOUiJmlVhJJ4TfJMAmoFn6xdPFfiWzp2ELbx3G
      mpw7MNn53DiftIu+eG7NtO0HRGHgpg2uQDsPutFuZL15RPUpaDbYiQqSATSGsFtR
      3if8yM7gp4rCTMbEZeQNWW4Led4sM/LW9wFgo35dF8Nusmh8y5SqkXHrC8StEW3B
      QkkxS9IL99ZOU0Y4Ic4NbQi+R7bLcnbvyDXBQWivNJKdSwsx0PJGfNuyt06iethg
      mXDPkTIxIJWUyQ/rkDTIPpAcepV2hfXGfuhbLsxqWX/rU39whtzFXKNRSOAM8798
      o72ygAECgYEA9Hava1WAGyRF/B81688Hj69LHuyNMa26YuoJJOPs1HE9PXjlGFa5
      rDdp99Xku8ZwqUN3H9USU/g7L23u0J3t5rx+2sTS08I2GlT7D0Ciza6qdyfrfMLd
      wHHA/7A/qTfYBOcmUc0++cXd54DkC7VMc8MDlfeToEf+mrxlLYt+o5ECgYEA4h8G
      Aq9zJfKQklOxdfIloDVwakuUNDA4yFBXJlcsRzwg58raEzqVYYiamOp2J1DkeME+
      e9alsJacmeWsrt7cCs2jYgonLtMbR/UJoVJhkcSwe6VG0aafndwWUkLnd0/qzFi2
      9bZ+ZlsiEteIijpnxFflF7siH9BoPLXL/icMwPECgYA6T1ToNSypTK2kxY0HAgq7
      qwQwDBxhjR64GTq1IeiLg7cnwn5in80J1u3fv5UfdOXKed0gKqKEhOEZHw+nkwP7
      1VostGXVPK3K+hooOTKb/N2MLmltCM376SYv1spYgol0Ie5x9JLg4OFdJtE+ObBS
      rGFek/8SbBm+rtEzW+KJAQKBgDEQIjG69/Un6I6Xck3xOJDGh5nIxGN+gxOTuxUq
      nQTn2wvwS9kYQQlkpoa/eNuXBbvd0jz0mgby5w/NceaPnJcLf4PqSA406Bp45JoI
      Ufta/iAWAIPE76VE9+LpeWe+A2hLZ4dxDYQQChikg4/alGFZ4O+BPypAAh4KJDUF
      LBNBAoGBAJ02An4SFF06KhozejUxH+2WenFf5HKCauK8S8tXZG32BuZa884AUutX
      xWgcEMXwVWAbwPXMN8Ff8Ce8Ab7JREjNq2iK8krosd483wtLv23cc7/ZkS1kE+z+
      8TGy2TtGzO/RVMbB648Bq9xk7cBzBmICwZ4li3OPbRMoGEVYIGDH
      -----END RSA PRIVATE KEY-----

var_defs:
   - key: "TMP_DIR"
     value: "/tmp"
   - key: "WIGWAG_DIR"
     value: "/wigwag"
   - key: "NODE_EXEC"
     value: "/bin/node"
   - key: "SOMEFRUIT"
     value: "Bannana"
   - key: "FRUITART"
     value: |
      .o.       ooooooooo.   ooooooooo.   ooooo        oooooooooooo 
      .888.      `888   `Y88. `888   `Y88. `888'        `888'     `8 
      .8"888.      888   .d88'  888   .d88'  888          888         
      .8' `888.     888ooo88P'   888ooo88P'   888          888oooo8    
      .88ooo8888.    888          888          888          888    "    
      .8'     `888.   888          888          888       o  888       o 
      o88o     o8888o o888o        o888o        o888ooooood8 o888ooooood8 

stats:
    interval: 5 # frequency in seconds - default 300
    check_mem: true # default true
    check_mem_pace: 1  # means check every interval (default is 1 - every interval)
targets:
   - file: "{{TMP_DIR}}/maestro.log"
     rotate:
         max_files: 10
         max_file_size: 10000
         max_total_size: 100000
         rotate_on_start: true
     delim: "\n"
     format_time: "[%ld:%d] "
     format_level: "<%s> "
     format_tag: "{%s} "
     format_origin: "(%s) "
     filters:
       - levels: all
         format_pre: "PRE"
# JSON file
   - file: /tmp/json-maestro.log
     rotate:
         max_files: 10
         max_file_size: 10000
         max_total_size: 100000
         rotate_on_start: true
     delim: "],\n"
     format_time: "{\"time\":\"%ld:%d\"}, "
     format_level: "{\"level\":\"%s\"}, "
     format_tag: "{\"tag\":\"%s\"}, "
     format_origin: "{\"origin\":\"%s\"}, "
     format_pre_msg: "{ \"msg\":\""
     format_post: "\"}"
     flag_json_escape_strings: true
     filters:
       - levels: all
         format_pre: "["     # you will wrap this output with { "log": [ OUTPUT ] }
#         format_post: "]}"  # I am not sure if this works
   - name: "toCloud"  # this is a special target for sending to the cloud. It must send as a JSON
     format_time: "\"time\":\"%ld:%d\", "
     format_level: "\"level\":\"%s\", "
     format_tag: "\"tag\":\"%s\", "
     format_origin: "\"origin\":\"%s\", "
     format_pre_msg: "\"msg\":\""
     format_post: "\"}"
     flag_json_escape_strings: true
     filters:
       - levels: all
         format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
container_templates:
   - name: "deviceJS_process"
     cgroup:                 # will implement later
        mem_limit: 10000000
     inherit_env: true
     add_env:
        - "NODE_PATH=${WIGWAG_DIR}"
     exec_cmd: "node"        # will use PATH if not absolute path (as per execvp())
     exec_pre_args: 
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
        - "--max-semi-space-size=1"
        - "deviceJSContainer"
#     exec_post_args: 
   - name: "node_process"
     cgroup:                 # will implement later
        mem_limit: 10000000
     exec_cmd: "node"        # {{CMD}} will be filled in by the exec_cmd field below
     exec_pre_args: 
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
     exec_post_args: 
        - "whatev"
#     uses_ok_string: true     
   - name: "node_process2"
     cgroup:                 # will implement later
        mem_limit: 10000000
     exec_cmd: "node"
     exec_pre_args: 
        - "--max-executable-size=96"
        - "--max-old-space-size=128"
     exec_post_args: 
        - "whatev2"
jobs:
   # - job: "test_ok_string"
   #   exec_cmd: "{{cwd}}/auxtests/test-node-wait10s.js"
   #   container_template: "node_process"
   # - job: "test_ok_string2
   #   exec_cmd: "{{cwd}}/auxtests/test-node.js"
   #   container_template: "node_process2"
   #   depends_on:
   #      - "test_ok_string"
   - job: "test_ok_read_message"
     exec_cmd: "{{cwd}}/auxtests/test-node-read-message-stdin.js"
     container_template: "node_process"
     message: "birds ENDCONFIG"
     exec_args:
        - "Apples"
   - job: "test_ok_read_message2"
     exec_cmd: "{{cwd}}/auxtests/test-node-read-message-stdin.js"
     container_template: "node_process"
     message: "monkeys ENDCONFIG"
     exec_args:
        - "{{SOMEFRUIT}}-like"
   - job: "test_ok_read_message3"
     exec_cmd: "{{cwd}}/auxtests/test-node-read-message-stdin.js"
     container_template: "node_process"
     message: "monkeys ENDCONFIG"
     exec_args:
        - "{{FRUITART}}"


       # - job: "test_ok_string_exit"
   #   exec_cmd: "{{cwd}}/auxtests/test-node-exit.js"
   #   container_template: "node_process"



#    - job: "devicejs"
#      exec_cmd: "node {{CMD}}"        # {{CMD}} will be filled in by the exec_cmd field below
#      exec_args: 
#         - "--max-executable-size=96"
#         - "--max-old-space-size=128"
#         - "--max-semi-space-size=1"
#         - "devicejs"
#    - job: "core_modules"
#      container_template: "deviceJS_process"
#      message: |
#                 "path" : "${thisdir}/../AppServer",
#                 "config": {}
#                 },
#                 {
#                 "path" : "${thisdir}/../APIProxy",
#                 "config": {}
#                 },
#                 {
#                     "path" : "${thisdir}/../core-lighting",
#                     "config": {}
#                 }
# #                {
# #                    "path" : "${thisdir}/../UPnP",
# #                    "config": {}
# #                },
#      restart: true
#      restart_limit: 5000
#      restart_pause: 100     # 100 seconds between restarts 
#    - job: "support_tunnel"
#      depends_on:            # these services must be running first
#         - "devicejs"
#      #    - "core_modules"
#      restart_on_dependency_fail: true  # kill the process and restart it if it's dependencies fail
#      no_autostart: false       # don't start it when maestro starts. But the job is available for start
#      container_template: "node_process"
#      exec_cmd: "/wigwag/support.js"  
#      exec_args:
#         - "some arg"      
#     
#   - tty: sometty
